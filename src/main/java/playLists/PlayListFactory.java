package playLists;

import dataStorage.AudioCatalog;
import dataStorage.AudioTrack;

import java.util.ArrayList;
import java.util.List;

/* Class description:
   Клас презначений формувати специфічні плей-листи для програвання.
   Ці плей-листи передаються у SimplePLayer який бере з них треки й програє.
   AudioCatalog є постачальником усіх пісень які є в програмі.
   Тут можуть створюватись також кастомні плей-листи, які створює сам користувач, бо
   в кожного плей листа є методи з додавання/видалені пісень з плей-листа.

   Реалізація:
   - Клас має своє місце де він зберігає усі пісні, це треба для зручності.
   - Клас має методи які відповідають за створення плей-листів
   - КЛАС ЗАЛЕЖНИЙ від AudioCatalog, адже він потребує повного листа з піснями.
   Залежність реалізується в конструкторі.
   - При створенні екземпляр ми отримаємо плей-лист і більше цей клас нам не потрібен.
   - Клас є Mutable через лист з піснями.

   Покращення:
   -

   Недоліки:
   - Коли в AudioCatalog попадає нова пісня цей клас не має нового списку пісень
   з цією піснею доки не буде створений новий екземпляр.
* */

// А якщо користувач захоче кастомний плей ліст стоврити? то як я його зебережу в программі
public class PlayListFactory {

    List<AudioTrack> original;

    public PlayListFactory(){
        this.original = AudioCatalog.getInstance().getCatalog();
    }

    /* Надання оригінального списку пісень в оригінальній послідовності, для програвання
    "з коробки".*/
    public RawPlayList createRawList(){
        return new RawPlayList(new ArrayList<>(original));
    }
}
